package kiinse.spacestation.bot.bot.commands;

import kiinse.spacestation.api.external.MySQLUtils;
import kiinse.spacestation.bot.bot.factories.KeyboardsFactory;
import kiinse.spacestation.bot.bot.handlers.CallBackDataHandler;
import kiinse.spacestation.bot.utilities.BotUtils;
import kiinse.spacestation.bot.utilities.config.Configuration;
import lombok.extern.slf4j.Slf4j;

import java.util.HashMap;

@Slf4j
public class CallBackDataList {

    private static final BotUtils bot = new BotUtils();
    private static final KeyboardsFactory keyboards = new KeyboardsFactory();
    private static final Commands cmd = new Commands();
    private static final Configuration config = new Configuration();
    private static final CallBackDataHandler callBackData = new CallBackDataHandler();

    public interface Function {
        void run(String chat, int messageID, String messageText);
    }

    private static final HashMap<String, Function> callBackMap = new HashMap<>();

    public void initialize() {
        callBackMap.clear();
        try {

            callBackMap.put("–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω", (chat, messageID, messageText) -> {
                MySQLUtils.setUnspecified(chat);
                bot.editMessageText(
                        chat,
                        messageID,
                        "<b>‚ñ¨‚ñ¨‚ñ¨‚ñ¨ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚ñ¨‚ñ¨‚ñ¨‚ñ¨</b>\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –ª–æ–≥–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å „ÉÉ",
                        null
                );
            });

            callBackMap.put("–ó–∞–≤–µ—Ä—à–∏—Ç—å", (chat, messageID, messageText) -> callBackData.editToSettings(chat, messageID, null));

            callBackMap.put("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å–õ–æ–≥–∏–Ω", (chat, messageID, messageText) -> {
                var login = messageText.split("\n")[3];
                MySQLUtils.updateLogin(chat, login);
                bot.editMessageText(
                        chat,
                        messageID,
                        "<b>‚ñ¨‚ñ¨‚ñ¨‚ñ¨ –£—Å–ø–µ—à–Ω–æ ‚ñ¨‚ñ¨‚ñ¨‚ñ¨</b>\n–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –ª–æ–≥–∏–Ω: " + MySQLUtils.getLogin(chat) + "\n\n",
                        null
                );
                bot.sendMessage(
                        chat,
                        String.format("<b>‚ñ¨‚ñ¨‚ñ¨‚ñ¨ %s ‚ñ¨‚ñ¨‚ñ¨‚ñ¨</b>\n" +
                                "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –∫ –∏–≥—Ä–æ–≤–æ–º—É –±–æ—Ç—É SpaceStationGame!\n\n ‚Üí –ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n\n–°–æ–∑–¥–∞—Ç–µ–ª—å: @%s", MySQLUtils.getLogin(chat), config.getProperty("admin")),
                        keyboards.Keyboard("–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∏–≥—Ä–æ–∫–∞üÜî", "–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–∞üÜî", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öô"),
                        null
                );
            });

            callBackMap.put("–û—Ç–∫–∞–∑–∞—Ç—å–õ–æ–≥–∏–Ω", (chat, messageID, messageText) -> {
                bot.editMessageText(
                        chat,
                        messageID,
                        "<b>‚ñ¨‚ñ¨‚ñ¨‚ñ¨ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚ñ¨‚ñ¨‚ñ¨‚ñ¨</b>\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –ª–æ–≥–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å „ÉÉ",
                        null
                );
            });

        } catch (Exception e) {
            log.warn("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CallBackData HashMap! {}", e.getMessage());
        }
    }

    public void runCallBackMapFunction(String value, String chat, int messageID, String messageText) {
        callBackMap.get(value).run(chat, messageID, messageText);
    }

    public boolean hasCallBackMapValue(String value) {
        return callBackMap.containsKey(value);
    }


}
